T = int(input())

for test_case in range(T):
    x, y = map(int, input().split())
		# 시작과 끝의 거리
    between = y - x
		# 출발할 때와 도착할 때의 속도는 무조건 1이어야 한다. 
		# 가장 최소로 움직이기 위해서 속도가 지속적으로 늘어나고 지속적으로 감소해야 한다.
		# while문이 반복될 때마다 속도를 증가시켜주고, 남은 거리에서 속도 * 2를 뺀다.
		# 1, 2, 3, ....., 3, 2, 1
		# 남은 거리가 딱 0이 되면 1, 2, 3, 3, 2, 1과 같은 형태인 것이고,
		# 장치 이동 횟수의 최솟값은 속도의 최댓값 * 2가 된다.
		# 남은 거리가 음수가 되면, 뺐던 i * 2를 남은 거리에 다시 더해주고 
		# 남은 거리가 최대 속도보다 작거나 같으면 기존의 작동 횟수에서 한 번만 더 작동하면 된다.
		# 1, 2, 3, ... 3, 2, 1 에서 남은 거리가 1이었을 경우, 1, 2, 2, 2, 3, 2, 1로 변환할 수 있기 때문에 남은 거리의 크기만 확인하면 된다.
    # 남은 거리가 최대 속도보다 크다면 기존의 작동 횟수에서 두 번 더 작동해야 한다.
		i = 1                        # 속도
    while True:
        between -= i * 2
        if between==0:
            print(i*2)
            break
        elif between < 0:
            between += i*2
            if between <= i:
                print((i-1)*2+1)
            else:
                print((i-1)*2+2)
            break
        i += 1